/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lojatelefonia.ui.GUI;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import lojatelefonia.ui.atributos.ModeloVenda;
import lojatelefonia.ui.atributos.Produto;

/**
 *
 * @author Matheus
 */
public class RealizarVenda extends javax.swing.JInternalFrame {

    /**
     * Creates new form RealizarVenda
     */
    public RealizarVenda() {
        initComponents();
        mostrarListaProduto();
        mostrarListaVenda();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        buttonVender = new javax.swing.JButton();
        txtValorFinal = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableProdutos = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtProdutoQtd = new javax.swing.JTextField();
        buttonAdd = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtProdutoID = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        buttonDeleteList = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtProdutoQtdDel = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableVenda = new javax.swing.JTable();
        txtVendaID = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Venda");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Valor Total:");

        buttonVender.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lojatelefonia/ui/image/Delivery-Icon.png"))); // NOI18N
        buttonVender.setText("Realizar Venda");
        buttonVender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonVenderActionPerformed(evt);
            }
        });

        txtValorFinal.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 51, 51));
        jLabel8.setText("Atenção, caso feche a aba o carrinho será perdido!");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Tabela de Produtos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        jTableProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "Descrição", "Marca", "N Série", "Fabricação", "Estoque", "Valor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableProdutos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableProdutosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableProdutos);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Quantidade:");

        buttonAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lojatelefonia/ui/image/iconCarrinho.png"))); // NOI18N
        buttonAdd.setText("Adicionar ao Carrinho");
        buttonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("ID:");

        txtProdutoID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtProdutoID.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtProdutoID, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtProdutoQtd, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonAdd)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtProdutoQtd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(txtProdutoID, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(buttonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Carrinho", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        buttonDeleteList.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lojatelefonia/ui/image/remove-icon-png-252.png"))); // NOI18N
        buttonDeleteList.setText("Excluir do Carrinho");
        buttonDeleteList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteListActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Quantidade:");

        jTableVenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID_VENDA", "VALOR TOTAL", "PRODUTO", "QUANTIDADE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableVenda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableVendaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableVenda);

        txtVendaID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtVendaID.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("ID:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 785, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtVendaID, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtProdutoQtdDel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonDeleteList, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonDeleteList, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtProdutoQtdDel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtVendaID, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtValorFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonVender)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buttonVender, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(txtValorFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Pega informacoes dos produtos com o clique
    private void jTableProdutosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableProdutosMouseClicked
        int i = jTableProdutos.getSelectedRow();
        TableModel model = jTableProdutos.getModel();
        txtProdutoQtd.setText(model.getValueAt(i, 6).toString());
        txtProdutoID.setText(model.getValueAt(i, 0).toString());
    }//GEN-LAST:event_jTableProdutosMouseClicked

    //Botao adicionar ao carrinho
    private void buttonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddActionPerformed
        int i = jTableProdutos.getSelectedRow();
        if (i < 0) {
            JOptionPane.showMessageDialog(null, "Por favor selecione um produto.", "ERRO", JOptionPane.ERROR_MESSAGE);
        } else {
            TableModel model = jTableProdutos.getModel();
            if (Integer.parseInt(model.getValueAt(i, 6).toString()) <= 0) {
                JOptionPane.showMessageDialog(null, "Sem estoque do item selecionado.");
            } else {
                String query = "INSERT INTO venda (VALOR_FK, PRODUTO_FK, QTD_FK) VALUES("
                        + Double.parseDouble(model.getValueAt(i, 7).toString()) * Integer.parseInt(txtProdutoQtd.getText()) + ","
                        + "'" + model.getValueAt(i, 1).toString() + "',"
                        + txtProdutoQtd.getText() + ")";
                executarQueryVenda(query, "Adicionado");
                String query2 = "UPDATE produtos SET qtd = " + model.getValueAt(i, 6) + -Integer.parseInt(txtProdutoQtd.getText()) + "WHERE id = " + txtProdutoID.getText();
                executarQuery(query2, null);
            }
            txtValorFinal.setText(Double.toString(getSum()));
        }
    }//GEN-LAST:event_buttonAddActionPerformed

    //Botao deletar do carrinho
    private void buttonDeleteListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteListActionPerformed
        int i = jTableVenda.getSelectedRow();
        if (i < 0) {
            JOptionPane.showMessageDialog(null, "Por favor selecione um produto.", "ERRO", JOptionPane.ERROR_MESSAGE);
        } else {
            TableModel model = jTableVenda.getModel();
            TableModel model2 = jTableProdutos.getModel();

            String query2 = "UPDATE venda SET qtd_fk = " + model.getValueAt(i, 3) + +-Integer.parseInt(txtProdutoQtdDel.getText()) + "WHERE id_venda=" + txtVendaID.getText();
            String query3 = "UPDATE produtos SET qtd = " + model2.getValueAt(i, 6) + +Integer.parseInt(txtProdutoQtdDel.getText()) + "WHERE id=" + txtProdutoID.getText();
            executarQueryVenda(query2, "Retirado");
            executarQueryNOMSG(query3, null);
            if (Integer.parseInt(model.getValueAt(i, 3).toString()) <= 0) {
                String query = "DELETE FROM venda WHERE id_venda = " + txtVendaID.getText();
                executarQueryVenda(query, "Deletado");
            }
            txtValorFinal.setText(Double.toString(getSum()));
        }
    }//GEN-LAST:event_buttonDeleteListActionPerformed

    //Botao realizar vender
    private void buttonVenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonVenderActionPerformed
        if (jTableVenda.getRowCount() <= 0) {
            JOptionPane.showMessageDialog(null, "O carrinho esta vazio.", "ERRO", JOptionPane.ERROR_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Compra realizada com sucesso!");
        }
    }//GEN-LAST:event_buttonVenderActionPerformed

    //Pega informacoes do carrinho com o clique
    private void jTableVendaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableVendaMouseClicked
        int i = jTableVenda.getSelectedRow();
        TableModel model = jTableVenda.getModel();
        txtProdutoQtdDel.setText(model.getValueAt(i, 3).toString());
        txtVendaID.setText(model.getValueAt(i, 0).toString());
    }//GEN-LAST:event_jTableVendaMouseClicked

    //Caso a aba for fechada a tabela de venda eh apagada
    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        if (jTableVenda.getRowCount() > 0) {
            String query = "DELETE FROM venda";
            executarQueryNOMSG(query, null);
        }
    }//GEN-LAST:event_formInternalFrameClosed

    //Testar conexao com banco de dados
    public Connection getConnection() {
        Connection con;
        try {
            con = DriverManager.getConnection("jdbc:derby://localhost:1527/telefonia", "root", "root");
            return con;
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }

    //Pegar tabela de produto
    public ArrayList<Produto> getListaProdutos() {
        ArrayList<Produto> listaProdutos = new ArrayList<Produto>();
        Connection connection = getConnection();

        String query = "SELECT * FROM produtos";
        Statement st;
        ResultSet rs;

        try {
            st = connection.createStatement();
            rs = st.executeQuery(query);
            Produto produto;
            while (rs.next()) {
                produto = new Produto(rs.getInt("id"), rs.getString("nome"), rs.getString("descricao"),
                        rs.getString("marca"), rs.getString("serie"), rs.getString("fabricacao"),
                        rs.getInt("qtd"), rs.getDouble("valor"));
                listaProdutos.add(produto);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return listaProdutos;
    }

    //Mostrar dados na tabela produto
    public void mostrarListaProduto() {
        ArrayList<Produto> lista = getListaProdutos();
        DefaultTableModel model = (DefaultTableModel) jTableProdutos.getModel();
        Object[] row = new Object[8];
        for (int i = 0; i < lista.size(); i++) {
            row[0] = lista.get(i).getId();
            row[1] = lista.get(i).getNome();
            row[2] = lista.get(i).getDesc();
            row[3] = lista.get(i).getMarca();
            row[4] = lista.get(i).getSerie();
            row[5] = lista.get(i).getFab();
            row[6] = lista.get(i).getQtd();
            row[7] = lista.get(i).getValor();

            model.addRow(row);
        }
    }

    //Pegar tabela de venda
    public ArrayList<ModeloVenda> getListaVendas() {
        ArrayList<ModeloVenda> listaVendas = new ArrayList<ModeloVenda>();
        Connection connection = getConnection();

        String query = "SELECT * FROM venda";
        Statement st;
        ResultSet rs;

        try {
            st = connection.createStatement();
            rs = st.executeQuery(query);
            ModeloVenda venda;
            while (rs.next()) {
                venda = new ModeloVenda(rs.getInt("id_venda"), rs.getDouble("valor_fk"), rs.getString("produto_fk"),
                        rs.getInt("qtd_fk"));
                listaVendas.add(venda);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return listaVendas;
    }

    //Mostrar dados na tabela venda
    public void mostrarListaVenda() {
        ArrayList<ModeloVenda> lista = getListaVendas();
        DefaultTableModel model = (DefaultTableModel) jTableVenda.getModel();
        Object[] row = new Object[8];
        for (int i = 0; i < lista.size(); i++) {
            row[0] = lista.get(i).getIdVenda();
            row[1] = lista.get(i).getValorVenda();
            row[2] = lista.get(i).getProduto();
            row[3] = lista.get(i).getQtd();

            model.addRow(row);
        }
    }

    //Executar query de venda com mensagem
    public void executarQueryVenda(String query, String message) {
        Connection con = getConnection();
        Statement st;
        try {
            st = con.createStatement();
            if (st.executeUpdate(query) == 1) {
                //refresh
                DefaultTableModel model = (DefaultTableModel) jTableVenda.getModel();
                model.setRowCount(0);
                mostrarListaVenda();

                JOptionPane.showMessageDialog(null, "Data " + message + " sucesso!");
            } else {
                JOptionPane.showMessageDialog(null, "Data " + message + " falhou!");
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    //Executar query de produto sem mensagem de sucesso
    public void executarQuery(String query, String message) {
        Connection con = getConnection();
        Statement st;
        try {
            st = con.createStatement();
            if (st.executeUpdate(query) == 1) {
                //refresh
                DefaultTableModel model = (DefaultTableModel) jTableProdutos.getModel();
                model.setRowCount(0);
                mostrarListaProduto();
            } else {
                JOptionPane.showMessageDialog(null, "Data " + message + " falhou!");
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    //Executar query de produto sem mensagem de sucesso
    public void executarQueryNOMSG(String query, String message) {
        Connection con = getConnection();
        Statement st;
        try {
            st = con.createStatement();
            if (st.executeUpdate(query) == 1) {
                //refresh
                DefaultTableModel model = (DefaultTableModel) jTableVenda.getModel();
                model.setRowCount(0);
                mostrarListaVenda();
            } else {
                JOptionPane.showMessageDialog(null, "Data " + message + " falhou!");
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    //Pega soma da coluna valor
    public double getSum() {
        int rowsCount = jTableVenda.getRowCount();
        double sum = 0;
        for (int i = 0; i < rowsCount; i++) {
            sum = sum + Double.parseDouble(jTableVenda.getValueAt(i, 1).toString());
        }
        return sum;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAdd;
    private javax.swing.JButton buttonDeleteList;
    private javax.swing.JButton buttonVender;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableProdutos;
    private javax.swing.JTable jTableVenda;
    private javax.swing.JLabel txtProdutoID;
    private javax.swing.JTextField txtProdutoQtd;
    private javax.swing.JTextField txtProdutoQtdDel;
    private javax.swing.JLabel txtValorFinal;
    private javax.swing.JLabel txtVendaID;
    // End of variables declaration//GEN-END:variables
}
